{"version":3,"file":"static/js/341.83255bf8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","components/Utils/Api.jsx","components/servise/servise.js","webpack://react-homework-template/./src/page/Movies/Movies.module.css?e724","page/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item_film\":\"MoviesList_item_film__FP8jq\",\"item\":\"MoviesList_item__eePYv\",\"link\":\"MoviesList_link__8rTGX\"};","import { Link, useLocation } from \"react-router-dom\";\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n    const location = useLocation();\n\n    return (\n    <ul className={css.item_film}>\n        {movies.map((movie) => (\n        <li className={css.item} key={movie.id}>\n            <Link\n            className={css.link}\n            to={{ pathname: `/movies/${movie.id}`, state: { from: location } }}\n            >\n            {movie.title}\n            </Link>\n        </li>\n        ))}\n    </ul>\n    );\n}\n\nexport default MoviesList;","\nimport axios from \"axios\";\nimport { API_KEY, BASE_URL } from \"components/servise/servise\";\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get('/trending/movie/day');\n    return data.results; \n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits`);\n    return data.cast;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport const fetchMovieSearch = async query => {\n  try {\n    const { data } = await axios.get(`/search/movie?query=${query}`);\n\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n};","export const API_KEY = 'e2461c3c5366673fc196ad29d85aaa39';\nexport const BASE_URL = `https://api.themoviedb.org/3`;","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Movies_button__UA9jN\",\"input\":\"Movies_input__3JANh\",\"title\":\"Movies_title__twVOZ\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieSearch } from 'components/Utils/Api';\nimport css from './Movies.module.css';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n\n  useEffect(() => {\n    const queryParam = searchParams.get('query');\n    if (!queryParam) return;\n\n    const handleSearch = async () => {\n      setIsLoading(true);\n      setHasSearched(true);\n      try {\n        const searchResults = await fetchMovieSearch(queryParam);\n        setMovies(searchResults);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        setMovies([]);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    handleSearch();\n  }, [searchParams]);\n\n  const handleInputChange = (event) => {\n    setQuery(event.target.value);\n  };\n\nconst handleSearch = () => {\n    searchParams.set('query', query);\n    setSearchParams(searchParams);\n  };\n\n  return (\n    <div>\n      <h1 className={css.title}>Search Movies</h1>\n      <div>\n        <input\n          className={css.input}\n          type=\"text\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <button className={css.button} onClick={handleSearch}>\n          Search\n        </button>\n      </div>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        hasSearched && movies.length === 0 && query !== '' && <p>No movies found.</p>\n      )}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["movies","location","useLocation","className","css","map","movie","to","pathname","id","state","from","title","axios","api_key","language","fetchTrendingMovies","data","results","console","log","error","fetchMovieCredits","movieId","cast","fetchMovieReviews","fetchMovieSearch","query","fetchMovieDetails","useState","setQuery","setMovies","isLoading","setIsLoading","hasSearched","setHasSearched","useSearchParams","searchParams","setSearchParams","useEffect","queryParam","get","handleSearch","searchResults","type","value","onChange","event","target","onClick","set","length","MoviesList"],"sourceRoot":""}